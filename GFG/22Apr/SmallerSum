class Solution{
public:
    vector<long long> smallerSum(int n,vector<int> &arr){
        long long sum = 0;
        vector<int> temp(n);
        vector<long long> res(n);
        for(int i = 0; i < n; i++){
            temp[i] = i;
        }
        sortArr(arr,temp,n);
        logger.log("ARR");
        logger.print(arr);
        logger.log("RES");
        logger.print(temp);
        res[temp[0]] = sum;
        for(int i = 1; i < n; i++){
            cout << "Pos " << temp[i]+1 << " Value " << sum << endl;
            if (arr[i] == arr[i-1]){
                res[temp[i]] = sum;
                
            }
            else{
                sum += arr[i-1];
                res[temp[i]] = sum;
            }
        }
        return res;
    }
    void sortArr(vector<int> &arr,vector<int> &temp, int n){
        mergesort(arr,temp,0,n-1);
    }
    void mergesort(vector<int> &arr,vector<int> &temp, int start, int end){
        if(start<end){
            int mid = (start+end)/2;
            mergesort(arr,temp,start,mid);
            mergesort(arr,temp,mid+1,end);
            merge(arr,temp,start,mid,end);
        }
    }
    void merge(vector<int> &arr,vector<int> &temp, int start,int mid, int end){
        vector<int> leftAR(mid-start+1);
        vector<int> rightAR(end-mid);

        vector<int> leftRS(mid-start+1);
        vector<int> rightRS(end-mid);

        for(int i=0;i<mid-start+1;i++){
            leftAR[i] = arr[start+i];
            leftRS[i] = temp[start+i];
        }
        for(int i=0;i<end-mid;i++){
            rightAR[i] = arr[mid+1+i];
            rightRS[i] = temp[mid+1+i];
        }

        int i = 0,j = 0, k =start;
        while(i < leftAR.size() &&  j < rightAR.size()){
            if(leftAR[i] <= rightAR[j]){
                arr[k] = leftAR[i];
                temp[k] = leftRS[i];
                i++;
            }
            else{
                arr[k] = rightAR[j];
                temp[k] = rightRS[j];
                j++;
            }
            k++;
        }

        if(i<leftAR.size()){
            while(i<leftAR.size()){
                arr[k] = leftAR[i];
                temp[k] = leftRS[i];
                k++;
                i++;
            }
        }
        if(j<rightAR.size()){
            while(j<rightAR.size()){
                arr[k] = rightAR[j];
                temp[k] = rightRS[j];
                k++;
                j++;
            }
        }
    }
};